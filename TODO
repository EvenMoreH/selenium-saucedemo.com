TESTS:
[x] test_login.py
    [x] test_invalid_login
    [x] test_locked_out_login
    [x] test login with missing data
    [x] test login with whitespaces
    [x] test login case sensitivity

[x] test_products_page.py
    [x] opening cart
        [x] opening cart as various user roles/types (using parametrization)
    [x] filtering
        [x] expand filtering to various user types
        [x] build assertion model that extracts products name and checks if sorted correctly
        [x] build assertion model that extracts products price and checks if sorted correctly
    [x] adding to cart for various users
    [x] removing from cart (products page)
    [x] cart badge updating
    [x] social media (LinkedIn) redirection
    [x] access product details and check if correct product opens up

[-] test_checkout_flow.py
    [-] full flow
    [-] adding to cart
    [-] removing from cart (cart page)
    [-] returning to products list

[x] test_cart.py
    [x] removing from cart - single products
    [x] removing from cart - multiple products
    [x] going back to products page
    [x] checkout button

PAGES:
[x] products_page.py
[x] cart_page.py
[-] product_details_page.py
[-] checkout_information_page.py
[-] checkout_overview_page.py
[-] checkout_complete_page.py

[-] cart_page.py
    [x] build fixture to access cart directly
    [x] checkout button
    [x] going back to products page

[-] product_details_page.py
    [x] add to cart from preview
    [-] remove from cart from preview
    [-] back to products page from preview
    [-] check if price match products page

FLOWS:
[-] test_purchase_flow - (e2e test)

MISC:
[x] refactor POM to use locators outside of _innit_ for better readability taking into account volume of tests.
[x] expand tests and POM with docstring to achieve some level of documentation for the future
[x] test result logging configuration
[x] moving some loops to list comprehension